name: CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  grafonnet_generator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run grafana json container generator
        run: |
          sudo docker run --rm --name run_grafonnet -v $GITHUB_WORKSPACE/grafana/perf:/app --privileged quay.io/ebattat/run_grafonnet:latest

      - name: Check for changes in grafana json file
        id: check_changes
        run: |
          cp $GITHUB_WORKSPACE/grafana/perf/output.json $GITHUB_WORKSPACE/grafana/perf/output_original.json
          git diff --quiet $GITHUB_WORKSPACE/grafana/perf/output.json || echo "changes=true" >>$GITHUB_OUTPUT

      - name: Update Grafana dashboard with new json
        if: steps.check_changes.outputs.changes == 'true'
        env:
          PERF_GRAFANA_URL: ${{ secrets.PERF_GRAFANA_URL }}
          PERF_GRAFANA_API_KEY: ${{ secrets.PERF_GRAFANA_API_KEY }}
          PERF_GRAFANA_JSON: grafana/perf/output.json
        run: |
              python $GITHUB_WORKSPACE/grafana/update_grafana_dashboard.py
              cp $GITHUB_WORKSPACE/grafana/perf/output_original.json $GITHUB_WORKSPACE/perf/grafana/output.json

      - name: Commit grafana json file after update version
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo ${{ steps.check_changes.outputs.changes }}
          git checkout main
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global user.name  ${{ secrets.USER_NAME }}
          git add $GITHUB_WORKSPACE/grafana/perf/output.json
          git commit -m "Update grafana json file"

          # Pull the latest changes from the remote main branch
          git pull origin main

          # Push the changes to the remote main branch
          git push
